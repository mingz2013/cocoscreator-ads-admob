import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.application'

android {
    compileSdkVersion PROP_COMPILE_SDK_VERSION.toInteger()
    buildToolsVersion PROP_BUILD_TOOLS_VERSION

    defaultConfig {
        applicationId "com.xiuxayo.els1010"
        minSdkVersion PROP_MIN_SDK_VERSION
        targetSdkVersion PROP_TARGET_SDK_VERSION
        versionCode 1
        versionName "1.0"

        externalNativeBuild {
            ndkBuild {
                if (!project.hasProperty("PROP_NDK_MODE") || PROP_NDK_MODE.compareTo('none') != 0) {
                    // skip the NDK Build step if PROP_NDK_MODE is none
                    targets 'cocos2djs'
                    arguments 'NDK_TOOLCHAIN_VERSION=clang'

                    def module_paths = [project.file("/Applications/CocosCreator-2.0.7.app/Contents/Resources/cocos2d-x"),
                                        project.file("/Applications/CocosCreator-2.0.7.app/Contents/Resources/cocos2d-x/cocos"),
                                        project.file("/Applications/CocosCreator-2.0.7.app/Contents/Resources/cocos2d-x/external")]
                    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
                        arguments 'NDK_MODULE_PATH=' + module_paths.join(";")
                    }
                    else {
                        arguments 'NDK_MODULE_PATH=' + module_paths.join(':')
                    }

                    arguments '-j' + Runtime.runtime.availableProcessors()
                    abiFilters.addAll(PROP_APP_ABI.split(':').collect{it as String})
                }
            }
        }

        // https://developer.android.com/studio/build/multidex
        multiDexEnabled true

    }

    sourceSets.main {
        java.srcDir "src"
        res.srcDir "res"
        jniLibs.srcDir "libs"
        manifest.srcFile "AndroidManifest.xml"
    }

    externalNativeBuild {
        ndkBuild {
            if (!project.hasProperty("PROP_NDK_MODE") || PROP_NDK_MODE.compareTo('none') != 0) {
                // skip the NDK Build step if PROP_NDK_MODE is none
                path "jni/Android.mk"
            }
        }
    }

    signingConfigs {

       release {
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        release {
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                signingConfig signingConfigs.release
            }

            externalNativeBuild {
                ndkBuild {
                    arguments 'NDK_DEBUG=0'
                }
            }

        }

        debug {
            debuggable true
            jniDebuggable true
            renderscriptDebuggable true
            externalNativeBuild {
                ndkBuild {
                    arguments 'NDK_DEBUG=1'
                }
            }

        }
    }
}

android.applicationVariants.all { variant ->
    // delete previous files first
    delete "${buildDir}/intermediates/assets/${variant.dirName}"

    variant.mergeAssets.doLast {
        copy {
           from "${buildDir}/../../../../../res"
           into "${buildDir}/intermediates/assets/${variant.dirName}/res"
        }

        copy {
            from "${buildDir}/../../../../../src"
            into "${buildDir}/intermediates/assets/${variant.dirName}/src"
        }

        copy {
            from "${buildDir}/../../../../../jsb-adapter"
            into "${buildDir}/intermediates/assets/${variant.dirName}/jsb-adapter"
        }

        copy {
            from "${buildDir}/../../../../../main.js"
            from "${buildDir}/../../../../../project.json"
            into "${buildDir}/intermediates/assets/${variant.dirName}"
        }
    }
}

repositories {
    maven { url "https://maven.google.com/"}
    jcenter() // includes the MoPub SDK and AVID library
    mavenCentral()


    maven {
        url 'https://dl.bintray.com/ironsource-mobile/android-sdk'
    }
    maven {
        url 'https://dl.bintray.com/ironsource-mobile/android-adapters'
    }
//    maven {
//        url  "https://adcolony.bintray.com/AdColony"
//    }

   // maven {
     //   url "https://s3.amazonaws.com/moat-sdk-builds"
    //}

   // maven {
     //   url "https://raw.githubusercontent.com/HyprMXMobile/Android-SDKs/master"
    //}
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar','*.aar'])
    implementation fileTree(dir: "/Applications/CocosCreator-2.0.7.app/Contents/Resources/cocos2d-x/cocos/platform/android/java/libs", include: ['*.jar'])
    implementation project(':libcocos2dx')



    implementation 'com.android.support:support-v4:26.1.0'
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support:recyclerview-v7:26.1.0'
    implementation 'com.android.support:support-annotations:26.1.0'
    implementation 'com.google.android.gms:play-services-ads:17.1.2'


//    implementation 'com.google.android.gms:play-services-ads:17.1.2'

    implementation 'com.ironsource.sdk:mediationsdk:6.8.1@jar'

    // Add AdColony Network
//    implementation 'com.ironsource.adapters:adcolonyadapter:4.1.5@jar'
//    implementation 'com.adcolony:sdk:3.3.5'

    // Add AdMob Network
    implementation 'com.ironsource.adapters:admobadapter:4.3.0@jar'

    // Add Applovin Network
    implementation 'com.ironsource.adapters:applovinadapter:4.3.1@jar'

    // Add Chartboost Network
//    implementation 'com.ironsource.adapters:chartboostadapter:4.1.7@jar'

    // Add Facebook Network
    implementation 'com.ironsource.adapters:facebookadapter:4.3.1@jar'

    // Add Fyber Network (Adapter only)
//    implementation 'com.ironsource.adapters:fyberadapter:4.3.0@jar'
//    implementation 'com.google.code.gson:gson:2.7'

    // Add HyprMX Network
//    implementation 'com.ironsource.adapters:hyprmxadapter:4.1.1@jar'
//    implementation 'com.hyprmx.android:HyprMX-SDK:4.3'


    // Add InMobi Network
//    implementation 'com.ironsource.adapters:inmobiadapter:4.3.0@jar'
//    implementation 'com.squareup.picasso:picasso:2.5.2'

    // Add Maio Network
//    implementation 'com.ironsource.adapters:maioadapter:4.1.2@jar'

    // Add MediaBrix Network
//    implementation 'com.ironsource.adapters:mediabrixadapter:4.1.0@jar'

    // Add MoPub Network
//    implementation 'com.ironsource.adapters:mopubadapter:4.1.3@jar'
//    implementation ('com.mopub:mopub-sdk-rewardedvideo:5.2.0@aar') {transitive = true }

    // Add Tapjoy Network
//    implementation 'com.ironsource.adapters:tapjoyadapter:4.1.3@jar'

    // Add UnityAds Network
//    implementation 'com.ironsource.adapters:unityadsadapter:4.1.3@jar'

    // Add Vungle Network
//    implementation 'com.ironsource.adapters:vungleadapter:4.1.4@jar'



    // facebook
    implementation 'com.facebook.android:facebook-android-sdk:[4,5)'
    implementation 'com.facebook.android:facebook-marketing:[4,5)'
}
